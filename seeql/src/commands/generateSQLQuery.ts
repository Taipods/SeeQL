import * as vscode from 'vscode';
import axios from 'axios';
import { dbStructure } from '../sqlite/RunQuery';

/**
 * Function to create a VS Code Webview panel for user input and AI-generated SQL queries.
 */
export function openSQLQueryPanel() {
    const panel = vscode.window.createWebviewPanel(
        'sqlQueryGenerator',
        'SQL Query Generator',
        vscode.ViewColumn.One,
        { enableScripts: true }
    );

    panel.webview.html = getWebviewContent();
    panel.webview.onDidReceiveMessage(
        async (message) => {
            if (message.command === 'generateQuery') {
                const sqlQuery = await generateSQLQuery(message.text, dbStructure);
                panel.webview.postMessage({ command: 'displayQuery', query: sqlQuery });
            }
        },
        undefined,
        []
    );
}

/**
 * Function to send a natural language query to Ollama and receive an SQL query response.
 * @param prompt - User input in plain English
 * @returns SQL query generated by the AI model
 */
async function generateSQLQuery(prompt: string, db: string): Promise<string> {
    try {
        const response = await axios.post("http://localhost:11434/api/generate", {
            model: "mistral",
            prompt: `For the database: ${db}, Generate an SQL query for: ${prompt}`,
            stream: false
        });

        if (response.data && response.data.response) {
            return response.data.response;
        } else {
            throw new Error("Invalid response from Ollama API");
        }
    } catch (error) {
        console.error("Error generating SQL query:", error);
        return "Failed to generate SQL query.";
    }
}

/**
 * Returns the HTML content for the Webview.
 */
// TODO change the UI since it's kind of bad rn
function getWebviewContent(): string {
    return `
    <html>
        <head>
            <style>
                body { font-family: Arial, sans-serif; padding: 20px; }
                input, button { padding: 10px; margin-top: 10px; width: 100%; }
                // pre { background: #f4f4f4; padding: 10px; border-radius: 5px; }
            </style>
        </head>
        <body>
            <h2>SQL Query Generator</h2>
            <input id="queryInput" type="text" placeholder="Enter your natural language query">
            <button onclick="sendQuery()">Generate SQL</button>
            <h3>Generated SQL Query:</h3>
            <pre id="sqlOutput">Waiting for input...</pre>

            <script>
                const vscode = acquireVsCodeApi();

                function sendQuery() {
                    const query = document.getElementById('queryInput').value;
                    vscode.postMessage({ command: 'generateQuery', text: query });
                }

                window.addEventListener('message', event => {
                    if (event.data.command === 'displayQuery') {
                        document.getElementById('sqlOutput').textContent = event.data.query;
                    }
                });
            </script>
        </body>
    </html>`;
}